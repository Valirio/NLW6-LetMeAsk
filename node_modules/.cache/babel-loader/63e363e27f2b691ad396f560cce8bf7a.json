{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { createContext } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [session, setSession] = useState();\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from google Account.');\n      }\n\n      setSession({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        session,\n        signInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hMcUw+GpViU3/BLDXtegWeavdAM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/App.tsx"],"names":["useState","createContext","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContext","App","session","setSession","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup","user","displayName","photoURL","uid","Error","id","name","avatar"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;AAaA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASQ,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;;AAEA,iBAAeY,gBAAf,GAAiC;AAC/B,UAAMC,QAAQ,GAAG,IAAIN,QAAQ,CAACD,IAAT,CAAcQ,kBAAlB,EAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACU,eAAL,CAAqBH,QAArB,CAArB;;AAEE,QAAGE,MAAM,CAACE,IAAV,EAAe;AACb,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAgCL,MAAM,CAACE,IAA7C;;AAEA,UAAG,CAACC,WAAD,IAAgB,CAACC,QAApB,EAA6B;AAC3B,cAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDV,MAAAA,UAAU,CAAC;AACTW,QAAAA,EAAE,EAAEF,GADK;AAETG,QAAAA,IAAI,EAAEL,WAFG;AAGTM,QAAAA,MAAM,EAACL;AAHE,OAAD,CAAV;AAKD;AACF;;AAEH,sBACE,QAAC,aAAD;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAET,QAAAA,OAAF;AAAWE,QAAAA;AAAX,OAA7B;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhCQI,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport { createContext } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { Home } from './pages/Home'\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\n\n\ntype User = {\n  id:string;\n  name:string;\n  avatar:string;\n}\ntype AuthContextType = {\n  session: User | undefined;\n  signInWithGoogle: () => void;\n}\n\nexport const AuthContext = createContext({} as AuthContextType)\n\nfunction App() {\n\n  const [session, setSession] = useState<User>();\n\n  async function signInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider()\n\n    const result = await auth.signInWithPopup(provider)\n\n      if(result.user){\n        const { displayName, photoURL, uid} = result.user\n\n        if(!displayName || !photoURL){\n          throw new Error('Missing information from google Account.')\n        }\n\n        setSession({\n          id: uid,\n          name: displayName,\n          avatar:photoURL\n        })\n      }\n    }\n\n  return (\n    <BrowserRouter>\n    <AuthContext.Provider value={{ session, signInWithGoogle }}>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/rooms/new\" component={NewRoom} />\n    </AuthContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}