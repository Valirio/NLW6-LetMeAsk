{"ast":null,"code":"import _slicedToArray from\"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{database}from\"../services/firebase\";import{useAuth}from\"./useAuth\";export function UseRoom(roomId){var _useAuth=useAuth(),session=_useAuth.session;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];useEffect(function(){var roomRef=database.ref(\"rooms/\".concat(roomId));roomRef.on('value',function(room){var _databaseRoom$questio;var databaseRoom=room.val();var firebaseQuestions=(_databaseRoom$questio=databaseRoom.questions)!==null&&_databaseRoom$questio!==void 0?_databaseRoom$questio:{};var parsedQuestion=Object.entries(firebaseQuestions).map(function(_ref){var _value$likes,_Object$entries$find,_value$likes2;var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return{id:key,content:value.content,author:value.author,isHighlighted:value.isHighlighted,isAnswered:value.isAnswered,likeCount:Object.values((_value$likes=value.likes)!==null&&_value$likes!==void 0?_value$likes:{}).length,likeId:(_Object$entries$find=Object.entries((_value$likes2=value.likes)!==null&&_value$likes2!==void 0?_value$likes2:{}).find(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],like=_ref4[1];return like.authorId===(session===null||session===void 0?void 0:session.id);}))===null||_Object$entries$find===void 0?void 0:_Object$entries$find[0]};});setTitle(databaseRoom.title);setQuestions(parsedQuestion);//console.table(parsedQuestion)\n//console.table(databaseRoom.questions)\n});return function(){roomRef.off('value');};},[roomId,session===null||session===void 0?void 0:session.id]);return{questions:questions,title:title};}","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/hooks/useRoom.ts"],"names":["useEffect","useState","database","useAuth","UseRoom","roomId","session","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestion","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered","likeCount","values","likes","length","likeId","find","like","authorId","off"],"mappings":"iLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,OAAT,KAAwB,WAAxB,CA6BA,MAAO,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAgC,cAEhBF,OAAO,EAFS,CAE5BG,OAF4B,UAE5BA,OAF4B,eAGDL,QAAQ,CAAkB,EAAlB,CAHP,wCAG5BM,SAH4B,eAGjBC,YAHiB,8BAITP,QAAQ,CAAC,EAAD,CAJC,yCAI5BQ,KAJ4B,eAIrBC,QAJqB,eAMnCV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,OAAO,CAAGT,QAAQ,CAACU,GAAT,iBAAsBP,MAAtB,EAAhB,CAEAM,OAAO,CAACE,EAAR,CAAW,OAAX,CAAoB,SAAAC,IAAI,CAAI,2BACxB,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,GAAL,EAArB,CACA,GAAMC,CAAAA,iBAAoC,wBAAGF,YAAY,CAACR,SAAhB,+DAA6B,EAAvE,CAEA,GAAMW,CAAAA,cAAc,CAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,cAAkB,sFAAhBC,GAAgB,UAAXC,KAAW,UAC3E,MAAO,CACHC,EAAE,CAAEF,GADD,CAEHG,OAAO,CAAEF,KAAK,CAACE,OAFZ,CAGHC,MAAM,CAAEH,KAAK,CAACG,MAHX,CAIHC,aAAa,CAAEJ,KAAK,CAACI,aAJlB,CAKHC,UAAU,CAAEL,KAAK,CAACK,UALf,CAMHC,SAAS,CAAEV,MAAM,CAACW,MAAP,eAAcP,KAAK,CAACQ,KAApB,6CAA6B,EAA7B,EAAiCC,MANzC,CAOHC,MAAM,uBAAEd,MAAM,CAACC,OAAP,gBAAeG,KAAK,CAACQ,KAArB,+CAA8B,EAA9B,EAAkCG,IAAlC,CAAuC,kDAAEZ,GAAF,UAAQa,IAAR,gBAAkBA,CAAAA,IAAI,CAACC,QAAL,IAAkB9B,OAAlB,SAAkBA,OAAlB,iBAAkBA,OAAO,CAAEkB,EAA3B,CAAlB,EAAvC,CAAF,+CAAE,qBAA0F,CAA1F,CAPL,CAAP,CASH,CAVsB,CAAvB,CAWAd,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR,CACAD,YAAY,CAACU,cAAD,CAAZ,CACA;AACA;AACH,CAnBD,EAqBA,MAAO,WAAM,CACTP,OAAO,CAAC0B,GAAR,CAAY,OAAZ,EACH,CAFD,CAGH,CA3BQ,CA2BN,CAAChC,MAAD,CAASC,OAAT,SAASA,OAAT,iBAASA,OAAO,CAAEkB,EAAlB,CA3BM,CAAT,CA6BA,MAAO,CAAEjB,SAAS,CAATA,SAAF,CAAaE,KAAK,CAALA,KAAb,CAAP,CACH","sourcesContent":["import { useEffect, useState } from \"react\"\n\nimport { database } from \"../services/firebase\"\nimport { useAuth } from \"./useAuth\"\n\n\ntype FirebaseQuestions = Record<string, {\n    author:{\n        name:string;\n        avatar:string;\n    }\n    content:string;\n    isAnswered:boolean;\n    isHighlighted: boolean;\n    likes: Record<string, {\n        authorId: string;\n    }>\n}>\n\ntype QuestionsType = {\n    id:string;\n    author: {\n        name:string;\n        avatar:string;\n    }\n    content:string;\n    isAnswered:boolean;\n    isHighlighted: boolean;\n    likeCount: number;\n    likeId: string | undefined;\n}\n\nexport function UseRoom(roomId: string){\n\n    const{ session } = useAuth();\n    const [questions, setQuestions] = useState<QuestionsType[]>([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`)\n\n        roomRef.on('value', room => {\n            const databaseRoom = room.val()\n            const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\n\n            const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n                return {\n                    id: key,\n                    content: value.content,\n                    author: value.author,\n                    isHighlighted: value.isHighlighted,\n                    isAnswered: value.isAnswered,\n                    likeCount: Object.values(value.likes ?? {}).length,\n                    likeId: Object.entries(value.likes ?? {}).find(([key , like]) => like.authorId === session?.id)?.[0],\n                }\n            })\n            setTitle(databaseRoom.title)\n            setQuestions(parsedQuestion)\n            //console.table(parsedQuestion)\n            //console.table(databaseRoom.questions)\n        })\n\n        return () => {\n            roomRef.off('value');\n        }\n    }, [roomId, session?.id])\n\n    return { questions, title}\n}"]},"metadata":{},"sourceType":"module"}