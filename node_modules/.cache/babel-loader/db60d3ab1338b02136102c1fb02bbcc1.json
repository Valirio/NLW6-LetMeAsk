{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { Question } from '../components/Question';\nimport logoImg from \"../assets/images/logo.svg\";\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    session\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState('');\n  const roomId = params.id;\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n      var _databaseRoom$questio;\n\n      const databaseRoom = room.val();\n      const firebaseQuestions = (_databaseRoom$questio = databaseRoom.questions) !== null && _databaseRoom$questio !== void 0 ? _databaseRoom$questio : {};\n      const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n        return {\n          id: key,\n          content: value.curent,\n          author: value.author,\n          isHighlighted: value.isHighlighted,\n          isAnswered: value.isAnswered\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestion);\n      console.table(parsedQuestion);\n      console.table(databaseRoom.questions);\n    });\n  }, [roomId]);\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!session) {\n      throw new Error('You must bem logged in');\n    }\n\n    const question = {\n      current: newQuestion,\n      author: {\n        name: session.name,\n        avatar: session.avatar\n      },\n      isHightgted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"LetMeAsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta's\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [session ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: session.avatar,\n              alt: session.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: session.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 61\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !session,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), JSON.stringify(questions)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"mL6MwxLzqOa97h3CiRfdTaoaIlc=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/Room.tsx"],"names":["useState","useEffect","useParams","useAuth","database","Button","RoomCode","Question","Room","session","params","newQuestion","setNewQuestion","questions","setQuestions","title","setTitle","roomId","id","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestion","Object","entries","map","key","value","content","curent","author","isHighlighted","isAnswered","console","table","handleSendQuestion","event","preventDefault","trim","Error","question","current","name","avatar","isHightgted","push","logoImg","length","target","JSON","stringify"],"mappings":"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","sourcesContent":["import { FormEvent, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\n\nimport { useAuth } from '../hooks/useAuth'\nimport { database } from '../services/firebase'\n\nimport { Button } from '../components/Button'\nimport { RoomCode } from '../components/RoomCode'\nimport { Question } from '../components/Question'\nimport logoImg from '../assets/images/logo.svg'\n\n\n\nimport '../styles/room.scss'\n\n\ntype Questions ={\n    id:string;\n    author:{\n        name:string;\n        avatar:string;\n    }\n    content:string;\n    isAnswered:boolean;\n    isHighlighted: boolean;\n}\ntype FirebaseQuestions = Record<string, {\n    author:{\n        name:string;\n        avatar:string;\n    }\n    content:string;\n    isAnswered:boolean;\n    isHighlighted: boolean;\n}>\n\ntype RoomParams = {\n    id:string;\n}\n\n\nexport function Room(){\n    \n    const {session} = useAuth()\n    const params = useParams<RoomParams>()\n    const [newQuestion, setNewQuestion] = useState('')\n    const [questions, setQuestions] = useState<Questions[]>([])\n    const [title, setTitle] = useState('')\n    \n    const roomId = params.id\n\n    useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`)\n\n        roomRef.on('value', room => {\n            const databaseRoom = room.val()\n            const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {}\n\n            const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n                return {\n                    id: key,\n                    content: value.curent,\n                    author: value.author,\n                    isHighlighted: value.isHighlighted,\n                    isAnswered: value.isAnswered,\n                }\n            })\n            setTitle(databaseRoom.title)\n            setQuestions(parsedQuestion)\n            console.table(parsedQuestion)\n            console.table(databaseRoom.questions)\n        })\n    }, [roomId])\n\n    async function handleSendQuestion(event : FormEvent){\n        event.preventDefault()\n\n        if(newQuestion.trim() === ''){\n            return;\n        }\n\n        if(!session){\n            throw new Error('You must bem logged in')\n        }\n\n        const question = {\n            current: newQuestion,\n            author:{\n                name:session.name,\n                avatar: session.avatar,\n            },\n            isHightgted:false,\n            isAnswered: false,\n        }\n\n        await database.ref(`rooms/${roomId}/questions`).push(question)\n\n        setNewQuestion('')\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"LetMeAsk\" />\n                    <RoomCode code={roomId}/>\n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span>{questions.length} pergunta's</span>}  \n                </div>\n\n                <form onSubmit={handleSendQuestion}>\n                    <textarea\n                        placeholder=\"O que você quer perguntar?\"\n                        onChange={event => setNewQuestion(event.target.value)}\n                        value={newQuestion}\n                    />\n\n                    <div className=\"form-footer\">\n                        {session? (\n                            <div className=\"user-info\">\n                               <img src={session.avatar} alt={session.name} />\n                               <span>{session.name}</span>\n                            </div>\n                        ) : (\n                            <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\n                        )}\n                        <Button type=\"submit\" disabled={!session}>Enviar pergunta</Button>\n                    </div>\n                </form>\n                <div className=\"question-list\">\n                    {questions.map( question => {\n                        return (\n                            <Question key={question.id} content={question.content} author={question.author} />\n                        )                        \n                    })}\n                </div>\n                \n                {JSON.stringify(questions)}\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}