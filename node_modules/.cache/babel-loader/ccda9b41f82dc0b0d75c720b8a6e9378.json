{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom'; //import { useAuth } from '../hooks/useAuth'\n//import { database } from '../services/firebase'\n\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { Question } from '../components/Question';\nimport { UseRoom } from '../hooks/useRoom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport '../styles/room.scss';\nimport { database } from '../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  //const {session} = useAuth()\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = UseRoom(roomId);\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que você deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"LetMeAsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutline: true,\n            children: \"Encerrar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta's\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), JSON.stringify(questions)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoom, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/AdminRoom.tsx"],"names":["useParams","Button","RoomCode","Question","UseRoom","database","AdminRoom","params","roomId","id","title","questions","handleDeleteQuestion","questionId","window","confirm","ref","remove","logoImg","length","map","question","content","author","deleteImg","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B,C,CAEA;AACA;;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAIA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAMA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AAEvB;AACA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAMQ,MAAM,GAAGD,MAAM,CAACE,EAAtB;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAqBP,OAAO,CAACI,MAAD,CAAlC;;AAEA,iBAAeI,oBAAf,CAAoCC,UAApC,EAAuD;AACnD,QAAGC,MAAM,CAACC,OAAP,CAAe,oDAAf,CAAH,EAAwE;AACpE,YAAMV,QAAQ,CAACW,GAAT,CAAc,SAAQR,MAAO,cAAaK,UAAW,EAArD,EAAwDI,MAAxD,EAAN;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,SAAS,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,8BAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKC,SAAS,CAACQ,MAAV,GAAmB,CAAnB,iBAAwB;AAAA,qBAAOR,SAAS,CAACQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKR,SAAS,CAACS,GAAV,CAAeC,QAAQ,IAAI;AACxB,8BACI,QAAC,QAAD;AAEI,YAAA,OAAO,EAAEA,QAAQ,CAACC,OAFtB;AAGI,YAAA,MAAM,EAAED,QAAQ,CAACE,MAHrB;AAAA,mCAKI;AAAQ,cAAA,OAAO,EAAE,MAAMX,oBAAoB,CAACS,QAAQ,CAACZ,EAAV,CAA3C;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAIe,SAAZ;AAAuB,gBAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ,aACSH,QAAQ,CAACZ,EADlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAYH,SAbA;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ,EAwBKgB,IAAI,CAACC,SAAL,CAAef,SAAf,CAxBL;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GAvDeL,S;UAGGN,S;;;KAHHM,S","sourcesContent":["import { useParams } from 'react-router-dom'\n\n//import { useAuth } from '../hooks/useAuth'\n//import { database } from '../services/firebase'\n\nimport { Button } from '../components/Button'\nimport { RoomCode } from '../components/RoomCode'\nimport { Question } from '../components/Question'\nimport { UseRoom } from '../hooks/useRoom'\n\nimport logoImg from '../assets/images/logo.svg'\nimport deleteImg from '../assets/images/delete.svg'\nimport '../styles/room.scss'\nimport { database } from '../services/firebase'\n\ntype RoomParams = {\n    id:string;\n}\n\nexport function AdminRoom(){\n    \n    //const {session} = useAuth()\n    const params = useParams<RoomParams>()\n\n    const roomId = params.id\n    const {title, questions} = UseRoom(roomId)\n\n    async function handleDeleteQuestion(questionId: string){\n        if(window.confirm('Tem certeza que você deseja excluir essa pergunta?')){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n        }\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"LetMeAsk\" />\n                    <div>\n                        <RoomCode code={roomId}/>\n                        <Button isOutline >Encerrar Sala</Button>\n                    </div>\n                    \n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span>{questions.length} pergunta's</span>}  \n                </div>\n\n                \n                <div className=\"question-list\">\n                    {questions.map( question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}\n                                author={question.author}\n                            >\n                                <button onClick={() => handleDeleteQuestion(question.id)}>\n                                    <img src = {deleteImg} alt=\"Delete\" />\n                                </button>\n                            </Question>\n\n                        )                        \n                    })}\n                </div>\n                \n                {JSON.stringify(questions)}\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}