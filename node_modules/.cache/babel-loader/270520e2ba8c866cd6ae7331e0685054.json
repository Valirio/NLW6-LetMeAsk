{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\nimport { AuthContextProvider } from './contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [session, setSession] = useState();\n  useEffect(() => {\n    const unsubcribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from google Account.');\n        }\n\n        setSession({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n    return () => {\n      unsubcribe();\n    };\n  }, []);\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from google Account.');\n      }\n\n      setSession({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5mtdwkMs24cJM0x4JrQejwwvbbs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/App.tsx"],"names":["useState","useEffect","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContextProvider","App","session","setSession","unsubcribe","onAuthStateChanged","user","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;AAEA,SAASC,mBAAT,QAAoC,wBAApC;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAGN,IAAI,CAACO,kBAAL,CAAwBC,IAAI,IAAG;AAChD,UAAGA,IAAH,EAAQ;AACN,cAAM;AAAEC,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAgCH,IAAtC;;AAEA,YAAG,CAACC,WAAD,IAAgB,CAACC,QAApB,EAA6B;AAC3B,gBAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDP,QAAAA,UAAU,CAAC;AACTQ,UAAAA,EAAE,EAAEF,GADK;AAETG,UAAAA,IAAI,EAAEL,WAFG;AAGTM,UAAAA,MAAM,EAACL;AAHE,SAAD,CAAV;AAKD;AACF,KAdkB,CAAnB;AAeA,WAAO,MAAM;AACXJ,MAAAA,UAAU;AACX,KAFD;AAGD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,iBAAeU,gBAAf,GAAiC;AAC/B,UAAMC,QAAQ,GAAG,IAAIhB,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMnB,IAAI,CAACoB,eAAL,CAAqBH,QAArB,CAArB;;AAEE,QAAGE,MAAM,CAACX,IAAV,EAAe;AACb,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAgCQ,MAAM,CAACX,IAA7C;;AAEA,UAAG,CAACC,WAAD,IAAgB,CAACC,QAApB,EAA6B;AAC3B,cAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDP,MAAAA,UAAU,CAAC;AACTQ,QAAAA,EAAE,EAAEF,GADK;AAETG,QAAAA,IAAI,EAAEL,WAFG;AAGTM,QAAAA,MAAM,EAACL;AAHE,OAAD,CAAV;AAKD;AACF;;AAEH,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,mBAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArDQI,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { Home } from './pages/Home'\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\n\nimport { AuthContextProvider } from './contexts/AuthContext'\n\n\n\n\nfunction App() {\n\n  const [session, setSession] = useState<User>();\n\n  useEffect(() => {\n    const unsubcribe = auth.onAuthStateChanged(user =>{\n      if(user){\n        const { displayName, photoURL, uid} = user\n\n        if(!displayName || !photoURL){\n          throw new Error('Missing information from google Account.')\n        }\n\n        setSession({\n          id: uid,\n          name: displayName,\n          avatar:photoURL\n        })\n      }\n    })\n    return () => {\n      unsubcribe();\n    }\n  }, [])\n\n  async function signInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider()\n\n    const result = await auth.signInWithPopup(provider)\n\n      if(result.user){\n        const { displayName, photoURL, uid} = result.user\n\n        if(!displayName || !photoURL){\n          throw new Error('Missing information from google Account.')\n        }\n\n        setSession({\n          id: uid,\n          name: displayName,\n          avatar:photoURL\n        })\n      }\n    }\n\n  return (\n    <BrowserRouter>\n      <AuthContextProvider>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/rooms/new\" component={NewRoom} />\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}