{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { Question } from '../components/Question';\nimport logoImg from \"../assets/images/logo.svg\";\nimport '../styles/room.scss';\nimport { UseRoom } from '../hooks/useRoom';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    session\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = UseRoom(roomId);\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on(`value`, room => {\n      var _room$questions;\n\n      console.log(room.val());\n      const listQuestions = Object.entries((_room$questions = room.questions) !== null && _room$questions !== void 0 ? _room$questions : {});\n    });\n  }, [roomId]);\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!session) {\n      throw new Error('You must bem logged in');\n    }\n\n    const question = {\n      current: newQuestion,\n      author: {\n        name: session.name,\n        avatar: session.avatar\n      },\n      isHighligted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  async function handleLikeQuestion(questionId, likeId) {\n    if (likeId) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove();\n    } else {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n        authorId: session === null || session === void 0 ? void 0 : session.id\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"LetMeAsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta's\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [session ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: session.avatar,\n              alt: session.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: session.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 61\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !session,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            isAnswered: question.isAnswered,\n            isHighlighted: question.isHighlighted,\n            children: !question.isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `like-button ${question.likeId ? 'liked' : ''}`,\n              type: \"submit\",\n              \"aria-label\": \"Marcar como gostei\",\n              onClick: () => handleLikeQuestion(question.id, question.likeId),\n              children: [question.likeCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.likeCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\",\n                  stroke: \"#737380\",\n                  strokeWidth: \"1.5\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"RoASmlzDhmb3lGtaRsZrTNIVFeM=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","useAuth","database","Button","RoomCode","Question","UseRoom","useEffect","Room","session","params","newQuestion","setNewQuestion","roomId","id","title","questions","roomRef","ref","on","room","console","log","val","listQuestions","Object","entries","handleSendQuestion","event","preventDefault","trim","Error","question","current","author","name","avatar","isHighligted","isAnswered","push","handleLikeQuestion","questionId","likeId","remove","authorId","logoImg","length","target","value","map","content","isHighlighted","likeCount"],"mappings":"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","sourcesContent":["import { FormEvent, useState} from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { useAuth } from '../hooks/useAuth'\nimport { database } from '../services/firebase'\n\nimport { Button } from '../components/Button'\nimport { RoomCode } from '../components/RoomCode'\nimport { Question } from '../components/Question'\nimport logoImg from '../assets/images/logo.svg'\n\nimport '../styles/room.scss'\nimport { UseRoom } from '../hooks/useRoom'\nimport { useEffect } from 'react'\n\ntype RoomParams = {\n    id:string;\n}\n\ntype FirebaseQuestions = Record<string, {\n    author:{\n        name:string;\n        avatar:string;\n    }\n    content:string;\n    isAnswered:boolean;\n    isHighlighted: boolean;\n}>\n\nexport function Room(){\n    \n    const {session} = useAuth()\n    const params = useParams<RoomParams>()\n    const [newQuestion, setNewQuestion] = useState('')\n    const roomId = params.id\n    const {title, questions} = UseRoom(roomId)\n\n    useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`);\n\n        roomRef.on(`value`, room => {\n            console.log(room.val());\n\n            const listQuestions = Object.entries(room.questions ?? {})\n        })\n    } , [roomId])\n\n    async function handleSendQuestion(event : FormEvent){\n\n        event.preventDefault()\n\n        if(newQuestion.trim() === ''){\n            return;\n        }\n\n        if(!session){\n            throw new Error('You must bem logged in')\n        }\n\n        const question = {\n            current: newQuestion,\n            author:{\n                name:session.name,\n                avatar: session.avatar,\n            },\n            isHighligted:false,\n            isAnswered: false,\n        }\n\n        await database.ref(`rooms/${roomId}/questions`).push(question)\n\n        setNewQuestion('')\n    }\n\n    async function handleLikeQuestion(questionId:string, likeId: string | undefined){\n        if(likeId){\n            await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove()\n        }else{\n            await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n                authorId: session?.id,\n            })\n        }\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"LetMeAsk\" />\n                    <RoomCode code={roomId}/>\n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span>{questions.length} pergunta's</span>}  \n                </div>\n\n                <form onSubmit={handleSendQuestion}>\n                    <textarea\n                        placeholder=\"O que você quer perguntar?\"\n                        onChange={event => setNewQuestion(event.target.value)}\n                        value={newQuestion}\n                    />\n\n                    <div className=\"form-footer\">\n                        {session? (\n                            <div className=\"user-info\">\n                               <img src={session.avatar} alt={session.name} />\n                               <span>{session.name}</span>\n                            </div>\n                        ) : (\n                            <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\n                        )}\n                        <Button type=\"submit\" disabled={!session}>Enviar pergunta</Button>\n                    </div>\n                </form>\n                <div className=\"question-list\">\n                    {questions.map( question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}\n                                author={question.author}\n                                isAnswered={question.isAnswered}\n                                isHighlighted={question.isHighlighted}                                \n                            >\n                                {!question.isAnswered && (\n                                    <button\n                                        className={`like-button ${question.likeId ? 'liked' : ''}`}\n                                        type=\"submit\"\n                                        aria-label=\"Marcar como gostei\"\n                                        onClick={() => handleLikeQuestion(question.id, question.likeId)}\n                                    >\n                                        { question.likeCount > 0 && <span>{question.likeCount}</span>}\n                                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                        </svg>\n                                    </button>                                    \n                                )}\n                            </Question>\n                        )                        \n                    })}\n                </div>                \n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}