{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport logoImg from \"../assets/images/logo.svg\";\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    session\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const roomId = params.id;\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!session) {\n      throw new Error('You must bem logged in');\n    }\n\n    const question = {\n      current: newQuestion,\n      author: {\n        name: session.name,\n        avatar: session.avatar\n      },\n      isHightgted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"LetMeAsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [session ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: session.avatar,\n              alt: session.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: session.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 61\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !session,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"k0bXDFrGaVFQbhIQduDhnHNw8S8=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","useAuth","database","Button","RoomCode","Room","session","params","newQuestion","setNewQuestion","roomId","id","handleSendQuestion","event","preventDefault","trim","Error","question","current","author","name","avatar","isHightgted","isAnswered","ref","push","logoImg","target","value"],"mappings":"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","sourcesContent":["import { FormEvent, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\n\nimport { useAuth } from '../hooks/useAuth'\nimport { database } from '../services/firebase'\n\nimport { Button } from '../components/Button'\nimport { RoomCode } from '../components/RoomCode'\nimport logoImg from '../assets/images/logo.svg'\n\n\n\nimport '../styles/room.scss'\n\n\ntype RoomParams = {\n    id:string;\n}\n\n\nexport function Room(){\n    const {session} = useAuth()\n    const params = useParams<RoomParams>()\n    const [newQuestion, setNewQuestion] = useState('')\n    const roomId = params.id\n\n    async function handleSendQuestion(event : FormEvent){\n        event.preventDefault()\n\n        if(newQuestion.trim() === ''){\n            return;\n        }\n\n        if(!session){\n            throw new Error('You must bem logged in')\n        }\n\n        const question = {\n            current: newQuestion,\n            author:{\n                name:session.name,\n                avatar: session.avatar,\n            },\n            isHightgted:false,\n            isAnswered: false,\n        }\n\n        await database.ref(`rooms/${roomId}/questions`).push(question)\n\n        setNewQuestion('')\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"LetMeAsk\" />\n                    <RoomCode code={roomId}/>\n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala React</h1>\n                    <span>4 perguntas</span>\n                </div>\n\n                <form onSubmit={handleSendQuestion}>\n                    <textarea\n                        placeholder=\"O que você quer perguntar?\"\n                        onChange={event => setNewQuestion(event.target.value)}\n                        value={newQuestion}\n                    />\n\n                    <div className=\"form-footer\">\n                        {session? (\n                            <div className=\"user-info\">\n                               <img src={session.avatar} alt={session.name} />\n                               <span>{session.name}</span>\n                            </div>\n                        ) : (\n                            <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\n                        )}\n                        <Button type=\"submit\" disabled={!session}>Enviar pergunta</Button>\n                    </div>\n                </form>\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}