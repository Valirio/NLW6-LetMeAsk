{"ast":null,"code":"import _regeneratorRuntime from\"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useHistory,useParams}from'react-router-dom';//import { useAuth } from '../hooks/useAuth'\n//import { database } from '../services/firebase'\nimport{Button}from'../components/Button';import{RoomCode}from'../components/RoomCode';import{Question}from'../components/Question';import{UseRoom}from'../hooks/useRoom';import logoImg from\"../assets/images/logo.svg\";import deleteImg from\"../assets/images/delete.svg\";import checkImg from\"../assets/images/check.svg\";import answerImg from\"../assets/images/answer.svg\";import'../styles/room.scss';import{database}from'../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function AdminRoom(){//const {session} = useAuth()\nvar params=useParams();var history=useHistory();var roomId=params.id;var _UseRoom=UseRoom(roomId),title=_UseRoom.title,questions=_UseRoom.questions;function handleEndRoom(){return _handleEndRoom.apply(this,arguments);}function _handleEndRoom(){_handleEndRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return database.ref(\"rooms/\".concat(roomId)).update({endedAt:new Date()});case 2:history.push('/');case 3:case\"end\":return _context.stop();}}},_callee);}));return _handleEndRoom.apply(this,arguments);}function handleDeleteQuestion(_x){return _handleDeleteQuestion.apply(this,arguments);}function _handleDeleteQuestion(){_handleDeleteQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questionId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.confirm('Tem certeza que vocÃª deseja excluir essa pergunta?')){_context2.next=3;break;}_context2.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).remove();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleDeleteQuestion.apply(this,arguments);}function handleCheckQuestionAsAnswered(_x2,_x3){return _handleCheckQuestionAsAnswered.apply(this,arguments);}function _handleCheckQuestionAsAnswered(){_handleCheckQuestionAsAnswered=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(questionId,answered){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!answered){_context3.next=5;break;}_context3.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isAnswered:false});case 3:_context3.next=7;break;case 5:_context3.next=7;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isAnswered:true});case 7:case\"end\":return _context3.stop();}}},_callee3);}));return _handleCheckQuestionAsAnswered.apply(this,arguments);}function handleHighlightQuestion(_x4,_x5){return _handleHighlightQuestion.apply(this,arguments);}function _handleHighlightQuestion(){_handleHighlightQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(questionId,highlighted){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log(highlighted);if(!highlighted){_context4.next=6;break;}_context4.next=4;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isHighlighted:false});case 4:_context4.next=8;break;case 6:_context4.next=8;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isHighlighted:true});case 8:case\"end\":return _context4.stop();}}},_callee4);}));return _handleHighlightQuestion.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{id:\"page-room\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"LetMeAsk\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RoomCode,{code:roomId}),/*#__PURE__*/_jsx(Button,{isOutline:true,onClick:handleEndRoom,children:\"Encerrar Sala\"})]})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sala \",title]}),questions.length>0&&/*#__PURE__*/_jsxs(\"span\",{children:[questions.length,\" pergunta's\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-list\",children:questions.map(function(question){return/*#__PURE__*/_jsxs(Question,{content:question.content,author:question.author,isAnswered:question.isAnswered,isHighlighted:question.isHighlighted,children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleCheckQuestionAsAnswered(question.id,question.isAnswered);},children:/*#__PURE__*/_jsx(\"img\",{src:checkImg,alt:\"Marcar como pergunta respondida\"})}),!question.isAnswered?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleHighlightQuestion(question.id,question.isHighlighted);},children:/*#__PURE__*/_jsx(\"img\",{src:answerImg,alt:\"Dar destaque\"})}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleHighlightQuestion(question.id,question.isHighlighted);},disabled:true,children:/*#__PURE__*/_jsx(\"img\",{src:answerImg,alt:\"Dar destaque\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDeleteQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:deleteImg,alt:\"Delete\"})})]},question.id);})}),console.table(JSON.stringify(questions))]})]});}","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/AdminRoom.tsx"],"names":["useHistory","useParams","Button","RoomCode","Question","UseRoom","database","AdminRoom","params","history","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","answered","isAnswered","handleHighlightQuestion","highlighted","console","log","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg","table","JSON","stringify"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from 'react-router-dom'\n\n//import { useAuth } from '../hooks/useAuth'\n//import { database } from '../services/firebase'\n\nimport { Button } from '../components/Button'\nimport { RoomCode } from '../components/RoomCode'\nimport { Question } from '../components/Question'\nimport { UseRoom } from '../hooks/useRoom'\n\nimport logoImg from '../assets/images/logo.svg'\nimport deleteImg from '../assets/images/delete.svg'\nimport checkImg from '../assets/images/check.svg'\nimport answerImg from '../assets/images/answer.svg'\n\nimport '../styles/room.scss'\nimport { database } from '../services/firebase'\n\ntype RoomParams = {\n    id:string;\n}\n\nexport function AdminRoom(){\n    \n    //const {session} = useAuth()\n    const params = useParams<RoomParams>()\n    const history = useHistory()\n\n    const roomId = params.id\n    const {title, questions} = UseRoom(roomId)\n\n    async function handleEndRoom() {\n        await database.ref(`rooms/${roomId}`).update({\n           endedAt: new Date(),\n        })\n\n        history.push('/')\n    }\n\n    async function handleDeleteQuestion(questionId: string){\n        if(window.confirm('Tem certeza que vocÃª deseja excluir essa pergunta?')){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n        }\n    }\n\n    async function handleCheckQuestionAsAnswered(questionId: string, answered: boolean) {\n        if(answered){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isAnswered:false,\n            })\n        }else{\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isAnswered:true,\n            })\n        }\n    }\n\n    async function handleHighlightQuestion(questionId: string, highlighted: boolean) {\n        console.log(highlighted)\n        if(highlighted){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isHighlighted:false,\n            })\n        }else{\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isHighlighted:true,\n            })\n        }\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"LetMeAsk\" />\n                    <div>\n                        <RoomCode code={roomId}/>\n                        <Button isOutline onClick={handleEndRoom}>Encerrar Sala</Button>\n                    </div>\n                    \n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span>{questions.length} pergunta's</span>}  \n                </div>\n\n                \n                <div className=\"question-list\">\n                    {questions.map( question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}\n                                author={question.author}\n                                isAnswered={question.isAnswered}\n                                isHighlighted={question.isHighlighted}\n                            >\n                                <button onClick={() => handleCheckQuestionAsAnswered(question.id, question.isAnswered)}>\n                                    <img src = {checkImg} alt=\"Marcar como pergunta respondida\" />\n                                </button>\n                                {!question.isAnswered? (\n                                    <button onClick={() => handleHighlightQuestion(question.id, question.isHighlighted)}>\n                                        <img src = {answerImg} alt=\"Dar destaque\" />\n                                    </button>                                    \n                                ) : (\n                                    <button onClick={() => handleHighlightQuestion(question.id, question.isHighlighted)} disabled>\n                                        <img src = {answerImg} alt=\"Dar destaque\" />\n                                    </button>                                \n                                )}\n                                \n                                <button onClick={() => handleDeleteQuestion(question.id)}>\n                                    <img src = {deleteImg} alt=\"Delete\" />\n                                </button>\n                            </Question>\n\n                        )                        \n                    })}\n                </div>                \n                {console.table(JSON.stringify(questions))}\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}