{"ast":null,"code":"var _jsxFileName = \"/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from 'react-router-dom'; //import { useAuth } from '../hooks/useAuth'\n//import { database } from '../services/firebase'\n\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { Question } from '../components/Question';\nimport { UseRoom } from '../hooks/useRoom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport checkImg from \"../assets/images/check.svg\";\nimport answerImg from \"../assets/images/answer.svg\";\nimport '../styles/room.scss';\nimport { database } from '../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  //const {session} = useAuth()\n  const params = useParams();\n  const history = useHistory();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = UseRoom(roomId);\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que vocÃª deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId, answered) {\n    if (answered) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isAnswered: false\n      });\n    } else {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isAnswered: true\n      });\n    }\n  }\n\n  async function handleHighlightQuestion(questionId, highlighted) {\n    console.log(highlighted);\n\n    if (highlighted) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isHighlighted: false\n      });\n    } else {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isHighlighted: true\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"LetMeAsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutline: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta's\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            isAnswered: question.isAnswered,\n            isHighlighted: question.isHighlighted,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCheckQuestionAsAnswered(question.id, question.isAnswered),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: checkImg,\n                alt: \"Marcar como pergunta respondida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleHighlightQuestion(question.id, question.isHighlighted),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: answerImg,\n                alt: \"Dar destaque\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), JSON.stringify(questions)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoom, \"5Yg6uag+s4vtgA+cdVZxLbUcCA0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["/home/braatz/Desktop/www/rocketeseat/nlw6ToGether/letmeask/src/pages/AdminRoom.tsx"],"names":["useHistory","useParams","Button","RoomCode","Question","UseRoom","database","AdminRoom","params","history","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","answered","isAnswered","handleHighlightQuestion","highlighted","console","log","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg","JSON","stringify"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from 'react-router-dom'\n\n//import { useAuth } from '../hooks/useAuth'\n//import { database } from '../services/firebase'\n\nimport { Button } from '../components/Button'\nimport { RoomCode } from '../components/RoomCode'\nimport { Question } from '../components/Question'\nimport { UseRoom } from '../hooks/useRoom'\n\nimport logoImg from '../assets/images/logo.svg'\nimport deleteImg from '../assets/images/delete.svg'\nimport checkImg from '../assets/images/check.svg'\nimport answerImg from '../assets/images/answer.svg'\n\nimport '../styles/room.scss'\nimport { database } from '../services/firebase'\n\ntype RoomParams = {\n    id:string;\n}\n\nexport function AdminRoom(){\n    \n    //const {session} = useAuth()\n    const params = useParams<RoomParams>()\n    const history = useHistory()\n\n    const roomId = params.id\n    const {title, questions} = UseRoom(roomId)\n\n    async function handleEndRoom() {\n        await database.ref(`rooms/${roomId}`).update({\n           endedAt: new Date(),\n        })\n\n        history.push('/')\n    }\n\n    async function handleDeleteQuestion(questionId: string){\n        if(window.confirm('Tem certeza que vocÃª deseja excluir essa pergunta?')){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n        }\n    }\n\n    async function handleCheckQuestionAsAnswered(questionId: string, answered: boolean) {\n        if(answered){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isAnswered:false,\n            })\n        }else{\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isAnswered:true,\n            })\n        }\n    }\n\n    async function handleHighlightQuestion(questionId: string, highlighted: boolean) {\n        console.log(highlighted)\n        if(highlighted){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isHighlighted:false,\n            })\n        }else{\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n                isHighlighted:true,\n            })\n        }\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"LetMeAsk\" />\n                    <div>\n                        <RoomCode code={roomId}/>\n                        <Button isOutline onClick={handleEndRoom}>Encerrar Sala</Button>\n                    </div>\n                    \n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span>{questions.length} pergunta's</span>}  \n                </div>\n\n                \n                <div className=\"question-list\">\n                    {questions.map( question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}\n                                author={question.author}\n                                isAnswered={question.isAnswered}\n                                isHighlighted={question.isHighlighted}\n                            >\n                                <button onClick={() => handleCheckQuestionAsAnswered(question.id, question.isAnswered)}>\n                                    <img src = {checkImg} alt=\"Marcar como pergunta respondida\" />\n                                </button>\n                                <button onClick={() => handleHighlightQuestion(question.id, question.isHighlighted)}>\n                                    <img src = {answerImg} alt=\"Dar destaque\" />\n                                </button>                                \n                                <button onClick={() => handleDeleteQuestion(question.id)}>\n                                    <img src = {deleteImg} alt=\"Delete\" />\n                                </button>\n                            </Question>\n\n                        )                        \n                    })}\n                </div>\n                \n                {JSON.stringify(questions)}\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}